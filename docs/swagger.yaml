openapi: 3.0.0
info:
  title: ü•º API Labeca Store
  description: Essa API ir√° manipular Produtos, Categorias e Imagens do catal√≥go.
  version: 0.2.0

paths:

  /products:
    get:
      summary: Busca todos os produtos
      description: Esse endpoint ser√° respons√°vel por buscar todos os produtos.
      tags: ["Public"]
      security:  
        - ApiKeyAuth: [] 

      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: category
        schema:
          type: string
    

      responses: 
        200:
          description: Sucesso!
          content: 
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Product"
        204:
          description: Sucesso, mas nenhum dado encontrado!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

  /admin/login:
    post:
      summary: Login de Administrador
      description: Logo ap√≥s o login, ser√° retornado o token para ter acesso as rotas protegidas.
      tags: ["Admin Account"]
      requestBody: 
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Product"
            examples:

              User:
                value:  
                  nickname: user
                  password: password
      responses:
        201:
          description: Logado!
        400:
          description: Requisi√ß√£o mal feita!
        401:
          description: Senha incorreta!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        406:
          description: Nickname n√£o encontrado!
        500:
          description: Ocorreu um erro interno!

  /admin/products:

    get:
      summary: Buscar todos os produtos
      description: Esse endpoint ser√° respons√°vel por buscar todos os produtos.
      tags: ["Admin - Products"]
      security:  
        - ApiKeyAuth: [] 

      responses: 
        200:
          description: Sucesso!
          content: 
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Product"
        204:
          description: Sucesso, mas nenhum dado encontrado!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

    post:
      summary: Cadastro de produtos
      description: Esse endpoint ser√° respons√°vel por cadastrar novo produto. <br> <i>O item 'categoryId' e 'imageId' recebem o id da categoria e imagem que ser√£o associados aos produtos. </i>.
      tags: ["Admin - Products"]
      security:  
        - ApiKeyAuth: [] 
      requestBody: 
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Product"
            examples:

              Produto sem Categoria e Imagem:
                value:  
                  title: Camisa de time
                  description: Camisa de um time
                  price: 99.45
                  year: 19/20
                  inventoryPP: 0
                  inventoryP: 5
                  inventoryM: 6
                  inventoryG: 0
                  inventoryGG: 0
                  inventoryEG: 0
                  inventoryEGG: 0

              Produto com Categoria e Imagem: 
                value:
                  title: Camisa de time
                  description: Camisa de um time
                  price: 99.45
                  year: 19/20
                  inventoryPP: 0
                  inventoryP: 5
                  inventoryM: 6
                  inventoryG: 0
                  inventoryGG: 0
                  inventoryEG: 0
                  inventoryEGG: 0
                  categoryId: [ 5 ]
                  imageId: [ 5 ]

      responses: 
        201:
          description: Produto adicionado!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

  /admin/products/{id}:
    put:
      summary: Edita o produto informado
      description: Esse endpoint ser√° respons√°vel por buscar um produto e edita-lo.
      tags: ["Admin - Products"]
      security:  
        - ApiKeyAuth: [] 

      
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true

      requestBody: 
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Product"
            examples:

              Produto sem Categoria e Imagem:
                value:  
                  title: Camisa de time
                  description: Camisa de um time
                  price: 99.45
                  year: 19/20
                  inventoryPP: 0
                  inventoryP: 5
                  inventoryM: 6
                  inventoryG: 0
                  inventoryGG: 0
                  inventoryEG: 0
                  inventoryEGG: 0
                  categoryId: []
                  imageId: []

              Produto com Categoria e Imagem: 
                      value:
                        title: Camisa de time
                        description: Camisa de um time
                        price: 99.45
                        year: 19/20
                        inventoryPP: 0
                        inventoryP: 5
                        inventoryM: 6
                        inventoryG: 0
                        inventoryGG: 0
                        inventoryEG: 0
                        inventoryEGG: 0
                        categoryId: [ 5 ]
                        imageId: [ 5 ]
      
      responses:
        200:
          description: Produto editado!
        400:
          description: O Produto informado n√£o foi encontrado!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

    delete:
      summary: Remove o produto informado
      description: Esse endpoint ser√° respons√°vel por buscar um produto e remove-lo.
      tags: ["Admin - Products"]
      security:  
        - ApiKeyAuth: [] 

      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true

      responses:
        200:
          description: Produto apagado!
        400:
          description: O Produto informado n√£o foi encontrado!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

  /admin/categories:
    get:
      summary: Buscar todas as categorias
      description: Esse endpoint ser√° respons√°vel por buscar todas as categorias.
      tags: ["Admin - Categories"]
      security:  
        - ApiKeyAuth: [] 

      responses: 
        200:
          description: Sucesso!
          content: 
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Category"
        204:
          description: Sucesso, mas nenhum dado encontrado!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

    post:
      summary: Cadastro de categorias
      description: Esse endpoint ser√° respons√°vel por cadastrar uma nova categoria.
      tags: ["Admin - Categories"]
      security:  
        - ApiKeyAuth: [] 
      requestBody: 
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Category"
            examples:

              Category:
                value:  
                  name: manga longa

      responses: 
        201:
          description: Categoria criada!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

  /admin/categories/{id}:
    put:
      summary: Edita a categoria informada
      description: Esse endpoint ser√° respons√°vel por buscar uma categoria e edita-la.
      tags: ["Admin - Categories"]
      security:  
        - ApiKeyAuth: [] 

      
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true

      requestBody: 
        content:
          application/json:
            schema:
              $ref: "#components/schemas/Product"
            examples:

              Category:
                value:  
                  name: Camisa de time
                  
      responses:
        200:
          description: Categoria editada!
        400:
          description: O Categoria informada n√£o foi encontrada!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

    delete:
      summary: Remove a categoria informada
      description: Esse endpoint ser√° respons√°vel por buscar uma categoria e remove-la.
      tags: ["Admin - Categories"]
      security:  
        - ApiKeyAuth: [] 

      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true

      responses:
        200:
          description: A Categoria foi apagada!
        400:
          description: A categoria informada n√£o foi encontrada!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!
      
  /admin/images:
    get:
      summary: Buscar todas as imagens
      description: Esse endpoint ser√° respons√°vel por buscar todas as imagens.
      tags: ["Admin - Images"]
      security:  
        - ApiKeyAuth: [] 

      responses: 
        200:
          description: Sucesso!
          content: 
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Image"
        204:
          description: Sucesso, mas nenhum dado encontrado!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

    post:
      summary: Upload de Imagens
      description: Esse endpoint ser√° respons√°vel por fazer o upload de imagens.
      tags: ["Admin - Images"]
      security:  
        - ApiKeyAuth: [] 

      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photos:
                  type: string
                  format: binary
                  require: true
      
      responses: 
        201:
          description: Imagem enviada!
        400:
          description: Nenhuma imagem enviada!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!

  /admin/images/{id}:
    delete:
      summary: Remove a imagem informada
      description: Esse endpoint ser√° respons√°vel por buscar a imagem e remove-la.
      tags: ["Admin - Images"]
      security:  
        - ApiKeyAuth: [] 

      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true

      responses:
        200:
          description: A Imagem foi apagada!
        400:
          description: A imagem informada n√£o foi encontrada!
        401:
          description: Voc√™ n√£o tem permiss√£o para acessar essa rota!
        403:
          description: Voc√™ n√£o est√° autenticado. Por favor, fa√ßa login!
        500:
          description: Ocorreu um erro interno!


components:

  schemas:

    Product:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        description:
          type: string
        price:
          type: number
        year:
          type: string
        inventoryPP:
          type: number
        inventoryP:
          type: number
        inventoryM:
          type: number
        inventoryG:
          type: number
        inventoryGG:
          type: number
        inventoryEG:
          type: number
        inventoryEGG:
          type: number
        categoryId:
          type: array
          items: 
            type: number
        imageId:
          type: array
          items: 
            type: number
            
    Category:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        slug:
          type: string

    Image:
      type: object
      properties:
        id:
          type: number
        filename:
          type: string
        url:
          type: string

    UserLogin:
      type: object
      properties:
        name:
          type: string
        nickname:
          type: string
        password:
          type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: authorization